// -------------------------------------------------------------
// 
// File Name: C:\Users\jwbie\OneDrive\Documents\Academics\F22\551\551_Final_Project\fft_v2\hdl\joe_fft\dsSection.v
// Created: 2022-12-08 20:30:07
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: dsSection
// Source Path: joe_fft/downsample_top/Downsampler/dsSection
// Hierarchy Level: 3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module dsSection
          (clk,
           reset,
           enb,
           dataInreg,
           validInreg,
           internalReset,
           dsOut_re,
           ds_vout);


  input   clk;
  input   reset;
  input   enb;
  input   [15:0] dataInreg;  // uint16
  input   validInreg;
  input   internalReset;
  output  [15:0] dsOut_re;  // ufix16
  output  ds_vout;


  wire [15:0] dtc_re;  // ufix16
  wire [15:0] dtc_im;  // ufix16
  reg [4:0] downSampler_count;  // ufix5
  reg [15:0] downSampler_dataOutReg_re;  // ufix16
  reg [15:0] downSampler_dataOutReg_im;  // ufix16
  reg  downSampler_validOutReg;
  wire [4:0] downSampler_count_next;  // ufix5
  wire [15:0] downSampler_dataOutReg_re_next;  // ufix16
  wire [15:0] downSampler_dataOutReg_im_next;  // ufix16
  wire downSampler_validOutReg_next;
  wire [11:0] downSampler_1;  // ufix12
  wire [15:0] dsOut_im;  // ufix16


  assign dtc_re = dataInreg;



  assign dtc_im = 16'b0000000000000000;



  always @(posedge clk or posedge reset)
    begin : downSampler_process
      if (reset == 1'b1) begin
        downSampler_count <= 5'b00000;
        downSampler_dataOutReg_re <= 16'b0000000000000000;
        downSampler_dataOutReg_im <= 16'b0000000000000000;
        downSampler_validOutReg <= 1'b0;
      end
      else begin
        if (enb) begin
          if (internalReset == 1'b1) begin
            downSampler_count <= 5'b00000;
            downSampler_dataOutReg_re <= 16'b0000000000000000;
            downSampler_dataOutReg_im <= 16'b0000000000000000;
            downSampler_validOutReg <= 1'b0;
          end
          else begin
            downSampler_count <= downSampler_count_next;
            downSampler_dataOutReg_re <= downSampler_dataOutReg_re_next;
            downSampler_dataOutReg_im <= downSampler_dataOutReg_im_next;
            downSampler_validOutReg <= downSampler_validOutReg_next;
          end
        end
      end
    end

  assign downSampler_dataOutReg_re_next = ((validInreg != 1'b0) && (downSampler_count == 5'b00000) ? dtc_re :
              downSampler_dataOutReg_re);
  assign downSampler_dataOutReg_im_next = ((validInreg != 1'b0) && (downSampler_count == 5'b00000) ? dtc_im :
              downSampler_dataOutReg_im);
  assign downSampler_validOutReg_next = ((validInreg != 1'b0) && (downSampler_count == 5'b00000) ? 1'b1 :
              1'b0);
  assign downSampler_1 = {7'b0, downSampler_count};
  assign downSampler_count_next = (validInreg != 1'b0 ? (downSampler_1 < 12'b000000001100 ? downSampler_count + 5'b00001 :
              5'b00000) :
              downSampler_count);
  assign dsOut_re = downSampler_dataOutReg_re;
  assign dsOut_im = downSampler_dataOutReg_im;
  assign ds_vout = downSampler_validOutReg;



endmodule  // dsSection


// -------------------------------------------------------------
// 
// File Name: C:\Users\jwbie\OneDrive\Documents\Academics\F22\551\551_Final_Project\fft_v2\hdl\joe_fft\RADIX22FFT_CTRL1_1.v
// Created: 2022-12-08 20:30:07
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: RADIX22FFT_CTRL1_1
// Source Path: joe_fft/FFT/RADIX22FFT_CTRL1_1
// Hierarchy Level: 2
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module RADIX22FFT_CTRL1_1
          (clk,
           reset,
           enb_1_8_0,
           dinXTwdl_1_1_vld,
           dinXTwdl_1_1_vld_1,
           rd_1_Addr,
           rd_1_Enb,
           proc_1_enb);


  input   clk;
  input   reset;
  input   enb_1_8_0;
  input   dinXTwdl_1_1_vld;
  input   dinXTwdl_1_1_vld_1;
  output  rd_1_Addr;
  output  rd_1_Enb;
  output  proc_1_enb;


  reg [1:0] SDFController_wrState;  // ufix2
  reg [1:0] SDFController_rdState;  // ufix2
  reg  SDFController_rdAddr_reg;  // ufix1
  reg [1:0] SDFController_multjState;  // ufix2
  reg [1:0] SDFController_wrState_next;  // ufix2
  reg [1:0] SDFController_rdState_next;  // ufix2
  reg  SDFController_rdAddr_reg_next;  // ufix1
  reg [1:0] SDFController_multjState_next;  // ufix2
  reg  rd_1_Addr_1;
  reg  rd_1_Enb_1;
  reg  proc_1_enb_1;
  reg  multiply_1_J;


  // SDFController
  always @(posedge clk or posedge reset)
    begin : SDFController_process
      if (reset == 1'b1) begin
        SDFController_rdAddr_reg <= 1'b0;
        SDFController_wrState <= 2'b00;
        SDFController_rdState <= 2'b00;
        SDFController_multjState <= 2'b00;
      end
      else begin
        if (enb_1_8_0) begin
          SDFController_wrState <= SDFController_wrState_next;
          SDFController_rdState <= SDFController_rdState_next;
          SDFController_rdAddr_reg <= SDFController_rdAddr_reg_next;
          SDFController_multjState <= SDFController_multjState_next;
        end
      end
    end

  always @(SDFController_multjState, SDFController_rdAddr_reg, SDFController_rdState,
       SDFController_wrState, dinXTwdl_1_1_vld, dinXTwdl_1_1_vld_1) begin
    SDFController_wrState_next = SDFController_wrState;
    SDFController_rdState_next = SDFController_rdState;
    SDFController_rdAddr_reg_next = SDFController_rdAddr_reg;
    SDFController_multjState_next = SDFController_multjState;
    case ( SDFController_multjState)
      2'b00 :
        begin
          SDFController_multjState_next = 2'b00;
          multiply_1_J = 1'b0;
          if (SDFController_rdState == 2'b01) begin
            SDFController_multjState_next = 2'b01;
          end
        end
      2'b01 :
        begin
          multiply_1_J = 1'b0;
          if (SDFController_rdState == 2'b00) begin
            SDFController_multjState_next = 2'b10;
          end
        end
      2'b10 :
        begin
          multiply_1_J = 1'b0;
          SDFController_multjState_next = 2'b11;
        end
      2'b11 :
        begin
          multiply_1_J = 1'b1;
          SDFController_multjState_next = 2'b00;
        end
      default :
        begin
          SDFController_multjState_next = 2'b00;
          multiply_1_J = 1'b0;
        end
    endcase
    case ( SDFController_rdState)
      2'b00 :
        begin
          SDFController_rdState_next = 2'b00;
          SDFController_rdAddr_reg_next = 1'b0;
          rd_1_Enb_1 = 1'b0;
          if ((SDFController_wrState == 2'b11) && dinXTwdl_1_1_vld) begin
            SDFController_rdState_next = 2'b01;
            rd_1_Enb_1 = dinXTwdl_1_1_vld_1;
          end
        end
      2'b01 :
        begin
          rd_1_Enb_1 = dinXTwdl_1_1_vld_1;
          if (dinXTwdl_1_1_vld_1) begin
            SDFController_rdState_next = 2'b00;
          end
        end
      default :
        begin
          SDFController_rdState_next = 2'b00;
          SDFController_rdAddr_reg_next = 1'b0;
          rd_1_Enb_1 = 1'b0;
        end
    endcase
    case ( SDFController_wrState)
      2'b00 :
        begin
          SDFController_wrState_next = 2'b00;
          proc_1_enb_1 = 1'b0;
          if (dinXTwdl_1_1_vld) begin
            SDFController_wrState_next = 2'b11;
          end
        end
      2'b11 :
        begin
          SDFController_wrState_next = 2'b11;
          proc_1_enb_1 = 1'b0;
          if (dinXTwdl_1_1_vld) begin
            SDFController_wrState_next = 2'b10;
            proc_1_enb_1 = 1'b1;
          end
        end
      2'b10 :
        begin
          proc_1_enb_1 = 1'b0;
          SDFController_wrState_next = 2'b10;
          if (dinXTwdl_1_1_vld) begin
            SDFController_wrState_next = 2'b11;
          end
        end
      default :
        begin
          SDFController_wrState_next = 2'b00;
          proc_1_enb_1 = 1'b0;
        end
    endcase
    rd_1_Addr_1 = SDFController_rdAddr_reg;
  end



  assign rd_1_Addr = rd_1_Addr_1;

  assign rd_1_Enb = rd_1_Enb_1;

  assign proc_1_enb = proc_1_enb_1;

endmodule  // RADIX22FFT_CTRL1_1


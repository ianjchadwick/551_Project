// -------------------------------------------------------------
// 
// File Name: C:\Users\jwbie\OneDrive\Documents\Academics\F22\551\551_Final_Project\fft_v2\hdl\joe_fft\joe_fft_tc.v
// Created: 2022-12-08 20:30:07
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: joe_fft_tc
// Source Path: joe_fft_tc
// Hierarchy Level: 1
// 
// Master clock enable input: clk_enable
// 
// enb         : identical to clk_enable
// enb_1_8_0   : 8x slower than clk with last phase
// enb_1_8_1   : 8x slower than clk with phase 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module joe_fft_tc
          (clk,
           reset,
           clk_enable,
           enb,
           enb_1_8_0,
           enb_1_8_1);


  input   clk;
  input   reset;
  input   clk_enable;
  output  enb;
  output  enb_1_8_0;
  output  enb_1_8_1;


  reg [2:0] count8;  // ufix3
  wire comp_0_tmp;
  wire phase_0_tmp;
  reg  phase_0;
  wire enb_1_8_0_1;
  wire comp_1_tmp;
  wire phase_1_tmp;
  reg  phase_1;
  wire enb_1_8_1_1;


  assign enb = clk_enable;

  // Count limited, Unsigned Counter
  //  initial value   = 1
  //  step value      = 1
  //  count to value  = 7
  always @(posedge clk or posedge reset)
    begin : counter_8_process
      if (reset == 1'b1) begin
        count8 <= 3'b001;
      end
      else begin
        if (clk_enable) begin
          count8 <= count8 + 3'b001;
        end
      end
    end



  assign comp_0_tmp = count8 == 3'b111;



  assign phase_0_tmp = comp_0_tmp & clk_enable;



  always @(posedge clk or posedge reset)
    begin : phase_delay_process
      if (reset == 1'b1) begin
        phase_0 <= 1'b0;
      end
      else begin
        if (clk_enable) begin
          phase_0 <= phase_0_tmp;
        end
      end
    end



  assign enb_1_8_0_1 = phase_0 & clk_enable;



  assign enb_1_8_0 = enb_1_8_0_1;

  assign comp_1_tmp = count8 == 3'b000;



  assign phase_1_tmp = comp_1_tmp & clk_enable;



  always @(posedge clk or posedge reset)
    begin : phase_delay_1_process
      if (reset == 1'b1) begin
        phase_1 <= 1'b1;
      end
      else begin
        if (clk_enable) begin
          phase_1 <= phase_1_tmp;
        end
      end
    end



  assign enb_1_8_1_1 = phase_1 & clk_enable;



  assign enb_1_8_1 = enb_1_8_1_1;

endmodule  // joe_fft_tc


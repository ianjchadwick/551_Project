// -------------------------------------------------------------
// 
// File Name: C:\Users\jwbie\OneDrive\Documents\Academics\F22\551\551_Final_Project\fft_v2\hdl\joe_fft\joe_fft.v
// Created: 2022-12-08 20:30:07
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 1
// Target subsystem base rate: 1
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ce_out        8
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// Out2                          ce_out        8
// freq_out                      ce_out        8
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: joe_fft
// Source Path: joe_fft
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module joe_fft
          (clk,
           reset,
           clk_enable,
           ce_out,
           Out2,
           freq_out);


  input   clk;
  input   reset;
  input   clk_enable;
  output  ce_out;
  output  Out2;
  output  [15:0] freq_out;  // uint16


  wire enb;
  wire enb_1_8_0;
  wire enb_1_8_1;
  wire [15:0] Constant3_out1;  // uint16
  wire Constant1_out1;
  wire Constant2_out1;
  wire [15:0] downsample_top_out1;  // uint16
  wire downsample_top_out2;
  wire fifo_1_out1;
  wire Logical_Operator_out1;
  wire Logical_Operator1_out1;
  wire fifo_1_out2;
  wire [15:0] fifo_1_out3_0;  // uint16
  wire [15:0] fifo_1_out3_1;  // uint16
  wire [15:0] fifo_1_out3_2;  // uint16
  wire [15:0] fifo_1_out3_3;  // uint16
  wire [15:0] fifo_1_out3_4;  // uint16
  wire [15:0] fifo_1_out3_5;  // uint16
  wire [15:0] fifo_1_out3_6;  // uint16
  wire [15:0] fifo_1_out3_7;  // uint16
  wire signed [20:0] FFT_out1_re_0;  // sfix21
  wire signed [20:0] FFT_out1_re_1;  // sfix21
  wire signed [20:0] FFT_out1_re_2;  // sfix21
  wire signed [20:0] FFT_out1_re_3;  // sfix21
  wire signed [20:0] FFT_out1_re_4;  // sfix21
  wire signed [20:0] FFT_out1_re_5;  // sfix21
  wire signed [20:0] FFT_out1_re_6;  // sfix21
  wire signed [20:0] FFT_out1_re_7;  // sfix21
  wire FFT_out2;
  wire [15:0] max_finer_out1;  // uint16
  wire Constant_out1;
  wire fifo_2_out2;
  wire Logical_Operator2_out1;
  wire [15:0] fifo_2_out1;  // uint16


  assign Constant3_out1 = 16'b0000000000000001;



  assign Constant1_out1 = 1'b1;



  assign Constant2_out1 = 1'b0;



  joe_fft_tc u_joe_fft_tc (.clk(clk),
                           .reset(reset),
                           .clk_enable(clk_enable),
                           .enb(enb),
                           .enb_1_8_0(enb_1_8_0),
                           .enb_1_8_1(enb_1_8_1)
                           );

  downsample_top u_downsample_top (.clk(clk),
                                   .reset(reset),
                                   .enb(enb),
                                   .data_adc(Constant3_out1),  // uint16
                                   .valid_adc(Constant1_out1),
                                   .rst(Constant2_out1),
                                   .adc_downsample(downsample_top_out1),  // uint16
                                   .adc_valid(downsample_top_out2)
                                   );

  assign Logical_Operator_out1 =  ~ fifo_1_out1;



  assign Logical_Operator1_out1 = downsample_top_out2 & Logical_Operator_out1;



  fifo_1 u_fifo_1 (.clk(clk),
                   .reset(reset),
                   .enb(enb),
                   .push(Logical_Operator1_out1),
                   .sample_in(downsample_top_out1),  // uint16
                   .full(fifo_1_out1),
                   .valid_frame(fifo_1_out2),
                   .frame_out_0(fifo_1_out3_0),  // uint16
                   .frame_out_1(fifo_1_out3_1),  // uint16
                   .frame_out_2(fifo_1_out3_2),  // uint16
                   .frame_out_3(fifo_1_out3_3),  // uint16
                   .frame_out_4(fifo_1_out3_4),  // uint16
                   .frame_out_5(fifo_1_out3_5),  // uint16
                   .frame_out_6(fifo_1_out3_6),  // uint16
                   .frame_out_7(fifo_1_out3_7)  // uint16
                   );

  FFT u_FFT (.clk(clk),
             .reset(reset),
             .enb_1_8_0(enb_1_8_0),
             .dataIn_0(fifo_1_out3_0),  // uint16
             .dataIn_1(fifo_1_out3_1),  // uint16
             .dataIn_2(fifo_1_out3_2),  // uint16
             .dataIn_3(fifo_1_out3_3),  // uint16
             .dataIn_4(fifo_1_out3_4),  // uint16
             .dataIn_5(fifo_1_out3_5),  // uint16
             .dataIn_6(fifo_1_out3_6),  // uint16
             .dataIn_7(fifo_1_out3_7),  // uint16
             .validIn(fifo_1_out2),
             .dataOut_re_0(FFT_out1_re_0),  // sfix21
             .dataOut_re_1(FFT_out1_re_1),  // sfix21
             .dataOut_re_2(FFT_out1_re_2),  // sfix21
             .dataOut_re_3(FFT_out1_re_3),  // sfix21
             .dataOut_re_4(FFT_out1_re_4),  // sfix21
             .dataOut_re_5(FFT_out1_re_5),  // sfix21
             .dataOut_re_6(FFT_out1_re_6),  // sfix21
             .dataOut_re_7(FFT_out1_re_7),  // sfix21
             .validOut(FFT_out2)
             );

  assign Out2 = FFT_out2;

  max_finer u_max_finer (.In1_re_0(FFT_out1_re_0),  // sfix21
                         .In1_re_1(FFT_out1_re_1),  // sfix21
                         .In1_re_2(FFT_out1_re_2),  // sfix21
                         .In1_re_3(FFT_out1_re_3),  // sfix21
                         .In1_re_4(FFT_out1_re_4),  // sfix21
                         .In1_re_5(FFT_out1_re_5),  // sfix21
                         .In1_re_6(FFT_out1_re_6),  // sfix21
                         .In1_re_7(FFT_out1_re_7),  // sfix21
                         .Out1(max_finer_out1)  // uint16
                         );

  assign Constant_out1 = 1'b1;



  assign Logical_Operator2_out1 =  ~ fifo_2_out2;



  fifo_2 u_fifo_2 (.clk(clk),
                   .reset(reset),
                   .enb_1_8_0(enb_1_8_0),
                   .In(max_finer_out1),  // uint16
                   .Push(Constant_out1),
                   .Pop(Logical_Operator2_out1),
                   .Out(fifo_2_out1),  // uint16
                   .Empty(fifo_2_out2)
                   );

  assign freq_out = fifo_2_out1;

  assign ce_out = enb_1_8_1;

endmodule  // joe_fft

